{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"../Utils/axiosConfig\";\n\n// export default function Dashboard() {\n//   const [message, setMessage] = useState(\"\");\n//   const [user, setUser] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   // const [attendees, setAttendees] = useState([]);\n//   const [attendeesMap, setAttendeesMap] = useState({});\n//   // const [selectedEventId, setSelectedEventId] = useState(null);\n//   const [formData, setFormData] = useState({\n//     title: \"\",\n//     description: \"\",\n//     date: \"\",\n//     location: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const userData = localStorage.getItem(\"user\");\n//     if (userData) {\n//       setUser(JSON.parse(userData));\n//     }\n\n//     axios\n//       .get(\"/api/protected\")\n//       .then((res) => setMessage(res.data.message))\n//       .catch((err) => {\n//         setMessage(\"Unauthorized. Redirecting to login...\");\n//         setTimeout(() => {\n//           localStorage.removeItem(\"token\");\n//           localStorage.removeItem(\"user\");\n//           navigate(\"/login\");\n//         }, 2000);\n//       });\n\n//     fetchEvents();\n//   }, [navigate]);\n\n//  const fetchEvents = () => {\n//   axios\n//     .get(\"/api/events\")\n//     .then((res) => {\n//       if (Array.isArray(res.data)) {\n//         setEvents(res.data); // ✅ directly use the array\n//       } else {\n//         console.warn(\"Unexpected response:\", res.data);\n//         setEvents([]);\n//       }\n//     })\n//     .catch((err) => {\n//       console.error(\"Error fetching events\", err);\n//       setEvents([]);\n//     });\n// };\n\n// const fetchAttendees = async (eventId) => {\n//   try {\n//     const res = await axios.get(`/api/events/${eventId}/attendees`);\n//     setAttendeesMap((prev) => ({\n//       ...prev,\n//       [eventId]: res.data.attendees\n//     }));\n//   } catch (err) {\n//     console.error(\"Error fetching attendees\", err);\n//     alert(\"Could not load attendees.\");\n//   }\n// };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"user\");\n//     navigate(\"/login\");\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n//   };\n\n//   const handleRegister = async (eventId) => {\n//   try {\n//     const res = await axios.post(`/api/events/${eventId}/register`);\n//     alert(res.data.message || \"Registered successfully!\");\n//     fetchEvents()\n//   } catch (err) {\n//     console.error(\"Error registering for event:\", err);\n//     const msg = err?.response?.data?.message || \"Failed to register.\";\n//     alert(msg);\n//   }\n// };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//        const res = await axios.post(\"/api/events\", formData);\n//     const newEvent = res.data.event;\n\n// setEvents((prevEvents) => Array.isArray(prevEvents) ? [...prevEvents, newEvent] : [newEvent]); \n//     setFormData({ title: \"\", description: \"\", date: \"\" ,location: \"\"}); \n//   } catch (err) {\n//     console.error(\"Error creating event\", err);\n//   }\n// };\n\n//   return (\n//     <div className=\"p-4 max-w-3xl mx-auto\">\n//       <div className=\"flex justify-between items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold\">Welcome, {user?.name || \"User\"}!</h1>\n//         <button\n//           onClick={handleLogout}\n//           className=\"bg-red-500 text-white px-4 py-2 rounded\"\n//         >\n//           Logout\n//         </button>\n//       </div>\n\n//       <p className=\"mb-4\">{message}</p>\n\n//       {/* Create Event Form */}\n//       <form onSubmit={handleSubmit} className=\"bg-white p-4 rounded shadow mb-6\">\n//         <h2 className=\"text-xl font-semibold mb-2\">Create Event</h2>\n//         <input\n//           type=\"text\"\n//           name=\"title\"\n//           placeholder=\"Title\"\n//           value={formData.title}\n//           onChange={handleChange}\n//           className=\"block w-full mb-2 p-2 border rounded\"\n//           required\n//         />\n//         <textarea\n//           name=\"description\"\n//           placeholder=\"Description\"\n//           value={formData.description}\n//           onChange={handleChange}\n//           className=\"block w-full mb-2 p-2 border rounded\"\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={formData.date}\n//           onChange={handleChange}\n//           className=\"block w-full mb-2 p-2 border rounded\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"location\"\n//           placeholder=\"Location\"\n//           value={formData.location}\n//           onChange={handleChange}\n//           className=\"block w-full mb-2 p-2 border rounded\"\n//           required\n//         />\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n//         >\n//           Add Event\n//         </button>\n//       </form>\n\n//       {/* List of Events */}\n//       <div>\n//         <h2 className=\"text-xl font-semibold mb-2\">All Upcoming Events</h2>\n//         {Array.isArray(events) && events.length === 0 ? (\n//   <p>No events created yet.</p>\n// ) : (\n//   <ul className=\"space-y-2\">\n//     {events?.map((event) => (\n//       <li key={event._id} className=\"p-3 border rounded shadow-sm\">\n//         <h3 className=\"text-lg font-bold\">{event.title}</h3>\n//         <p>{event.description}</p>\n//         <p className=\"text-sm text-gray-500\">\n//           Date: {new Date(event.date).toLocaleDateString()}\n//         </p>\n//         <p className=\"text-sm text-gray-500\">\n//           📍 Location: {event.location}\n//         </p>\n//         <p className=\"text-sm text-gray-600\">\n//        🎟️ {event.attendees?.length || 0} attendees\n//          </p>\n//          <button\n//   className=\"mt-1 bg-gray-500 text-white px-2 py-1 rounded\"\n//   onClick={() => fetchAttendees(event._id)}\n// >\n//   View Attendees\n// </button>\n// {attendeesMap[event._id] && (\n//   <div className=\"mt-4 p-3 bg-gray-100 rounded\">\n//     <h3 className=\"font-semibold mb-2\">Attendees:</h3>\n//     {attendeesMap[event._id].length === 0 ? (\n//       <p>No attendees yet.</p>\n//     ) : (\n//       <ul className=\"list-disc ml-6\">\n//         {attendeesMap[event._id].map((a) => (\n//           <li key={a._id}>\n//             {a.name} ({a.email})\n//           </li>\n//         ))}\n//       </ul>\n//     )}\n//   </div>\n// )}\n\n//          {String(event.user?._id || event.user) !== String(user?._id) &&  (\n//         <button\n//           onClick={() => handleRegister(event._id)}\n//           className=\"mt-2 bg-green-500 text-white px-3 py-1 rounded\"\n//         >\n//           Register\n//         </button>\n\n//          )}\n//       </li>\n//     ))}\n//   </ul>\n// )}\n\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/Event Management Project/event-management/frontend/src/components/Dashboard.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"../Utils/axiosConfig\";\r\n\r\n// export default function Dashboard() {\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [user, setUser] = useState(null);\r\n//   const [events, setEvents] = useState([]);\r\n//   // const [attendees, setAttendees] = useState([]);\r\n//   const [attendeesMap, setAttendeesMap] = useState({});\r\n//   // const [selectedEventId, setSelectedEventId] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     date: \"\",\r\n//     location: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const userData = localStorage.getItem(\"user\");\r\n//     if (userData) {\r\n//       setUser(JSON.parse(userData));\r\n//     }\r\n\r\n//     axios\r\n//       .get(\"/api/protected\")\r\n//       .then((res) => setMessage(res.data.message))\r\n//       .catch((err) => {\r\n//         setMessage(\"Unauthorized. Redirecting to login...\");\r\n//         setTimeout(() => {\r\n//           localStorage.removeItem(\"token\");\r\n//           localStorage.removeItem(\"user\");\r\n//           navigate(\"/login\");\r\n//         }, 2000);\r\n//       });\r\n\r\n//     fetchEvents();\r\n//   }, [navigate]);\r\n\r\n//  const fetchEvents = () => {\r\n//   axios\r\n//     .get(\"/api/events\")\r\n//     .then((res) => {\r\n//       if (Array.isArray(res.data)) {\r\n//         setEvents(res.data); // ✅ directly use the array\r\n//       } else {\r\n//         console.warn(\"Unexpected response:\", res.data);\r\n//         setEvents([]);\r\n//       }\r\n//     })\r\n//     .catch((err) => {\r\n//       console.error(\"Error fetching events\", err);\r\n//       setEvents([]);\r\n//     });\r\n// };\r\n\r\n\r\n// const fetchAttendees = async (eventId) => {\r\n//   try {\r\n//     const res = await axios.get(`/api/events/${eventId}/attendees`);\r\n//     setAttendeesMap((prev) => ({\r\n//       ...prev,\r\n//       [eventId]: res.data.attendees\r\n//     }));\r\n//   } catch (err) {\r\n//     console.error(\"Error fetching attendees\", err);\r\n//     alert(\"Could not load attendees.\");\r\n//   }\r\n// };\r\n\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"user\");\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n//   };\r\n\r\n//   const handleRegister = async (eventId) => {\r\n//   try {\r\n//     const res = await axios.post(`/api/events/${eventId}/register`);\r\n//     alert(res.data.message || \"Registered successfully!\");\r\n//     fetchEvents()\r\n//   } catch (err) {\r\n//     console.error(\"Error registering for event:\", err);\r\n//     const msg = err?.response?.data?.message || \"Failed to register.\";\r\n//     alert(msg);\r\n//   }\r\n// };\r\n\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//        const res = await axios.post(\"/api/events\", formData);\r\n//     const newEvent = res.data.event;\r\n\r\n// setEvents((prevEvents) => Array.isArray(prevEvents) ? [...prevEvents, newEvent] : [newEvent]); \r\n//     setFormData({ title: \"\", description: \"\", date: \"\" ,location: \"\"}); \r\n//   } catch (err) {\r\n//     console.error(\"Error creating event\", err);\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//     <div className=\"p-4 max-w-3xl mx-auto\">\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-2xl font-bold\">Welcome, {user?.name || \"User\"}!</h1>\r\n//         <button\r\n//           onClick={handleLogout}\r\n//           className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n\r\n//       <p className=\"mb-4\">{message}</p>\r\n\r\n//       {/* Create Event Form */}\r\n//       <form onSubmit={handleSubmit} className=\"bg-white p-4 rounded shadow mb-6\">\r\n//         <h2 className=\"text-xl font-semibold mb-2\">Create Event</h2>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"title\"\r\n//           placeholder=\"Title\"\r\n//           value={formData.title}\r\n//           onChange={handleChange}\r\n//           className=\"block w-full mb-2 p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           name=\"description\"\r\n//           placeholder=\"Description\"\r\n//           value={formData.description}\r\n//           onChange={handleChange}\r\n//           className=\"block w-full mb-2 p-2 border rounded\"\r\n//         />\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"date\"\r\n//           value={formData.date}\r\n//           onChange={handleChange}\r\n//           className=\"block w-full mb-2 p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"location\"\r\n//           placeholder=\"Location\"\r\n//           value={formData.location}\r\n//           onChange={handleChange}\r\n//           className=\"block w-full mb-2 p-2 border rounded\"\r\n//           required\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Add Event\r\n//         </button>\r\n//       </form>\r\n\r\n//       {/* List of Events */}\r\n//       <div>\r\n//         <h2 className=\"text-xl font-semibold mb-2\">All Upcoming Events</h2>\r\n//         {Array.isArray(events) && events.length === 0 ? (\r\n//   <p>No events created yet.</p>\r\n// ) : (\r\n//   <ul className=\"space-y-2\">\r\n//     {events?.map((event) => (\r\n//       <li key={event._id} className=\"p-3 border rounded shadow-sm\">\r\n//         <h3 className=\"text-lg font-bold\">{event.title}</h3>\r\n//         <p>{event.description}</p>\r\n//         <p className=\"text-sm text-gray-500\">\r\n//           Date: {new Date(event.date).toLocaleDateString()}\r\n//         </p>\r\n//         <p className=\"text-sm text-gray-500\">\r\n//           📍 Location: {event.location}\r\n//         </p>\r\n//         <p className=\"text-sm text-gray-600\">\r\n//        🎟️ {event.attendees?.length || 0} attendees\r\n//          </p>\r\n//          <button\r\n//   className=\"mt-1 bg-gray-500 text-white px-2 py-1 rounded\"\r\n//   onClick={() => fetchAttendees(event._id)}\r\n// >\r\n//   View Attendees\r\n// </button>\r\n// {attendeesMap[event._id] && (\r\n//   <div className=\"mt-4 p-3 bg-gray-100 rounded\">\r\n//     <h3 className=\"font-semibold mb-2\">Attendees:</h3>\r\n//     {attendeesMap[event._id].length === 0 ? (\r\n//       <p>No attendees yet.</p>\r\n//     ) : (\r\n//       <ul className=\"list-disc ml-6\">\r\n//         {attendeesMap[event._id].map((a) => (\r\n//           <li key={a._id}>\r\n//             {a.name} ({a.email})\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     )}\r\n//   </div>\r\n// )}\r\n\r\n//          {String(event.user?._id || event.user) !== String(user?._id) &&  (\r\n//         <button\r\n//           onClick={() => handleRegister(event._id)}\r\n//           className=\"mt-2 bg-green-500 text-white px-3 py-1 rounded\"\r\n//         >\r\n//           Register\r\n//         </button>\r\n        \r\n//          )}\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// )}\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}